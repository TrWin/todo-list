{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"../styles/Card.scss\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ToDoList=()=>{const[lsAdd,setAddList]=useState([]);const[sessionTime,setTime]=useState([]);const[fruits,setFruits]=useState([]);const[vegetables,setVegetables]=useState([]);const[tasks,setTasks]=useState([{type:\"Fruit\",name:\"Apple\"},{type:\"Vegetable\",name:\"Broccoli\"},{type:\"Vegetable\",name:\"Mushroom\"},{type:\"Fruit\",name:\"Banana\"},{type:\"Vegetable\",name:\"Tomato\"},{type:\"Fruit\",name:\"Orange\"},{type:\"Fruit\",name:\"Mango\"},{type:\"Fruit\",name:\"Pineapple\"},{type:\"Vegetable\",name:\"Cucumber\"},{type:\"Fruit\",name:\"Watermelon\"},{type:\"Vegetable\",name:\"Carrot\"}]);//Session timeout 5 sec\nuseEffect(()=>{const countdownInterval=setInterval(()=>{setTime(prev=>prev.map(s=>s-1));},1000);return()=>clearInterval(countdownInterval);},[]);useEffect(()=>{console.log(sessionTime);console.log(lsAdd);let timeOutIndex=sessionTime.indexOf(0);while(timeOutIndex!==-1){const fruitIndex=fruits.indexOf(lsAdd[timeOutIndex]);const vegIndex=vegetables.indexOf(lsAdd[timeOutIndex]);if(fruitIndex!==-1){fruits.splice(fruitIndex,1);}else if(vegIndex!==-1){vegetables.splice(vegIndex,1);}console.log(lsAdd[timeOutIndex]);setTasks([...tasks,lsAdd[timeOutIndex]]);lsAdd.splice(timeOutIndex,1);sessionTime.splice(timeOutIndex,1);timeOutIndex=sessionTime.indexOf(0,timeOutIndex+1);}},[fruits,lsAdd,sessionTime,tasks,vegetables]);//Add task\nconst updatedTask=item=>{const updatedTasks=tasks.filter((task,i)=>task.name!==item.name);setTasks(updatedTasks);if(item.type===\"Fruit\"){setFruits([...fruits,item]);}else{setVegetables([...vegetables,item]);}setTime([...sessionTime,5]);setAddList([...lsAdd,item]);};// Removed function\nconst removed=item=>{if(item.type===\"Fruit\"){removedFruit(item);}else{removedVeg(item);}lsAdd.forEach((add,i)=>{if(add.name===item.name){sessionTime.splice(i,1);lsAdd.splice(i,1);}});};//sub func removed\nconst removedFruit=newFruit=>{const updatedFruit=fruits.filter((item,i)=>item.name!==newFruit.name);setFruits(updatedFruit);setTasks([...tasks,newFruit]);};//sub func removed\nconst removedVeg=newVegetable=>{const updatedTasksVeg=vegetables.filter((task,i)=>task.name!==newVegetable.name);setVegetables(updatedTasksVeg);setTasks([...tasks,newVegetable]);};//Reverse value back to main list\nconst reverseTask=(type,item,index)=>{console.log(item);if(item!==undefined){if(type===\"Fruit\"&&fruits.length!==0){let todo=[...fruits];todo.splice(index,1);setFruits(todo);}else if(type===\"Vegetable\"&&vegetables.length!==0){let todo=[...vegetables];todo.splice(index,1);setVegetables(todo);}setTasks([...tasks,item]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"tasks-grid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"todo-list\",children:/*#__PURE__*/_jsx(\"ul\",{children:tasks.map((task,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"task-card\",onClick:()=>updatedTask(task),children:/*#__PURE__*/_jsx(\"span\",{children:task.name})},index))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"todo-list\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Fruit\"}),/*#__PURE__*/_jsx(\"ul\",{children:fruits.map((task,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"task-card\",onClick:()=>removed(task),children:/*#__PURE__*/_jsx(\"span\",{children:task.name})},index))}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>reverseTask(\"Fruit\",fruits[fruits.length-1],fruits.length-1)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"todo-list\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Vegetable\"}),/*#__PURE__*/_jsx(\"ul\",{children:vegetables.map((task,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"task-card\",onClick:()=>removed(task),children:/*#__PURE__*/_jsx(\"span\",{children:task.name})},index))}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>reverseTask(\"Vegetable\",vegetables[vegetables.length-1],vegetables.length-1)})]})]});};export default ToDoList;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","ToDoList","lsAdd","setAddList","sessionTime","setTime","fruits","setFruits","vegetables","setVegetables","tasks","setTasks","type","name","countdownInterval","setInterval","prev","map","s","clearInterval","console","log","timeOutIndex","indexOf","fruitIndex","vegIndex","splice","updatedTask","item","updatedTasks","filter","task","i","removed","removedFruit","removedVeg","forEach","add","newFruit","updatedFruit","newVegetable","updatedTasksVeg","reverseTask","index","undefined","length","todo","className","children","onClick"],"sources":["C:/Work/React test/my-todo-list/src/components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/Card.scss\";\r\n\r\nconst ToDoList = () => {\r\n  const [lsAdd, setAddList] = useState([]);\r\n  const [sessionTime, setTime] = useState([]);    \r\n  const [fruits, setFruits] = useState([]);\r\n  const [vegetables, setVegetables] = useState([]);\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      type: \"Fruit\",\r\n      name: \"Apple\",\r\n    },\r\n    {\r\n      type: \"Vegetable\",\r\n      name: \"Broccoli\",\r\n    },\r\n    {\r\n      type: \"Vegetable\",\r\n      name: \"Mushroom\",\r\n    },\r\n    {\r\n      type: \"Fruit\",\r\n      name: \"Banana\",\r\n    },\r\n    {\r\n      type: \"Vegetable\",\r\n      name: \"Tomato\",\r\n    },\r\n    {\r\n      type: \"Fruit\",\r\n      name: \"Orange\",\r\n    },\r\n    {\r\n      type: \"Fruit\",\r\n      name: \"Mango\",\r\n    },\r\n    {\r\n      type: \"Fruit\",\r\n      name: \"Pineapple\",\r\n    },\r\n    {\r\n      type: \"Vegetable\",\r\n      name: \"Cucumber\",\r\n    },\r\n    {\r\n      type: \"Fruit\",\r\n      name: \"Watermelon\",\r\n    },\r\n    {\r\n      type: \"Vegetable\",\r\n      name: \"Carrot\",\r\n    },\r\n  ]);\r\n\r\n  //Session timeout 5 sec\r\n  useEffect(() => {\r\n    const countdownInterval = setInterval(() => {\r\n        setTime((prev) => prev.map((s) => s - 1))\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdownInterval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(sessionTime);\r\n    console.log(lsAdd);\r\n    let timeOutIndex = sessionTime.indexOf(0);\r\n    while (timeOutIndex !== -1) {\r\n        const fruitIndex = fruits.indexOf(lsAdd[timeOutIndex]) ;\r\n        const vegIndex = vegetables.indexOf(lsAdd[timeOutIndex]);\r\n\r\n        if (fruitIndex !== -1) {\r\n            fruits.splice(fruitIndex, 1)\r\n        }else if(vegIndex !== -1){\r\n            vegetables.splice(vegIndex, 1)\r\n        }\r\n        console.log(lsAdd[timeOutIndex]);\r\n        setTasks([...tasks, lsAdd[timeOutIndex]]);\r\n        lsAdd.splice(timeOutIndex,1);\r\n        sessionTime.splice(timeOutIndex,1);\r\n        timeOutIndex = sessionTime.indexOf(0, timeOutIndex + 1);\r\n    }\r\n  }, [fruits, lsAdd, sessionTime, tasks, vegetables])\r\n\r\n  //Add task\r\n  const updatedTask = (item) => {\r\n    const updatedTasks = tasks.filter((task, i) => task.name !== item.name);\r\n    setTasks(updatedTasks);\r\n\r\n    if (item.type === \"Fruit\") {\r\n      setFruits([...fruits, item]);\r\n    } else {\r\n      setVegetables([...vegetables, item]);\r\n    }\r\n\r\n    setTime([...sessionTime, 5]);\r\n    setAddList([...lsAdd, item]);\r\n  };\r\n\r\n  // Removed function\r\n  const removed = (item) =>{\r\n    if (item.type === \"Fruit\") {\r\n        removedFruit(item);\r\n    }else{\r\n        removedVeg(item);\r\n    }\r\n\r\n    lsAdd.forEach((add, i) => {\r\n        if (add.name === item.name) {\r\n            sessionTime.splice(i, 1);\r\n            lsAdd.splice(i, 1);\r\n        }\r\n    })\r\n  }\r\n\r\n  //sub func removed\r\n  const removedFruit = (newFruit) => {\r\n    const updatedFruit = fruits.filter(\r\n      (item, i) => item.name !== newFruit.name\r\n    );\r\n    setFruits(updatedFruit);\r\n\r\n    setTasks([...tasks, newFruit]);\r\n  };\r\n\r\n  //sub func removed\r\n  const removedVeg = (newVegetable) => {\r\n    const updatedTasksVeg = vegetables.filter(\r\n      (task, i) => task.name !== newVegetable.name\r\n    );\r\n    setVegetables(updatedTasksVeg);\r\n\r\n    setTasks([...tasks, newVegetable]);\r\n  };\r\n\r\n  //Reverse value back to main list\r\n  const reverseTask = (type, item, index) => {\r\n    console.log(item);\r\n    if (item !== undefined) {\r\n      if (type === \"Fruit\" && fruits.length !== 0) {\r\n        let todo = [...fruits];\r\n        todo.splice(index, 1);\r\n        setFruits(todo);\r\n      } else if (type === \"Vegetable\" && vegetables.length !== 0) {\r\n        let todo = [...vegetables];\r\n        todo.splice(index, 1);\r\n        setVegetables(todo);\r\n      }\r\n      setTasks([...tasks, item]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-grid\">\r\n      <div className=\"todo-list\">\r\n        <ul>\r\n          {tasks.map((task, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"task-card\"\r\n              onClick={() => updatedTask(task)}\r\n            >\r\n              <span>{task.name}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"todo-list\">\r\n        <h1>Fruit</h1>\r\n        <ul>\r\n          {fruits.map((task, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"task-card\"\r\n              onClick={() => removed(task)}\r\n            >\r\n              <span>{task.name}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div\r\n          onClick={() =>\r\n            reverseTask(\"Fruit\", fruits[fruits.length - 1], fruits.length - 1)\r\n          }\r\n        ></div>\r\n      </div>\r\n      <div className=\"todo-list\">\r\n        <h1>Vegetable</h1>\r\n        <ul>\r\n          {vegetables.map((task, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"task-card\"\r\n              onClick={() => removed(task)}\r\n            >\r\n              <span>{task.name}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div\r\n          onClick={() =>\r\n            reverseTask(\r\n              \"Vegetable\",\r\n              vegetables[vegetables.length - 1],\r\n              vegetables.length - 1\r\n            )\r\n          }\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}