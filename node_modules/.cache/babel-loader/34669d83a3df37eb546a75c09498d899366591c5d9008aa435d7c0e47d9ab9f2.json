{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React test\\\\my-todo-list\\\\src\\\\components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    type: 'Fruit',\n    name: 'Apple'\n  }, {\n    type: 'Vegetable',\n    name: 'Broccoli'\n  }, {\n    type: 'Vegetable',\n    name: 'Mushroom'\n  }, {\n    type: 'Fruit',\n    name: 'Banana'\n  }, {\n    type: 'Vegetable',\n    name: 'Tomato'\n  }, {\n    type: 'Fruit',\n    name: 'Orange'\n  }, {\n    type: 'Fruit',\n    name: 'Mango'\n  }, {\n    type: 'Fruit',\n    name: 'Pineapple'\n  }, {\n    type: 'Vegetable',\n    name: 'Cucumber'\n  }, {\n    type: 'Fruit',\n    name: 'Watermelon'\n  }, {\n    type: 'Vegetable',\n    name: 'Carrot'\n  }]);\n  const [fruits, setFruits] = useState([]);\n  const [vegetables, setVegetables] = useState([]);\n  const updatedTask = item => {\n    const updatedTasks = tasks.filter((task, i) => task.name !== item.name);\n    setTasks(updatedTasks);\n    if (item.type === 'Fruit') {\n      setFruits([...fruits, item]);\n    } else {\n      setVegetables([...vegetables, item]);\n    }\n  };\n  const removedFruit = newFruit => {\n    const updatedFruit = fruits.filter((item, i) => item.name !== newFruit.name);\n    setFruits(updatedFruit);\n    setTasks([...tasks, newFruit]);\n  };\n  const removedVeg = newVegetable => {\n    const updatedTasksVeg = vegetables.filter((task, i) => task.name !== newVegetable.name);\n    setVegetables(updatedTasksVeg);\n    setTasks([...tasks, newVegetable]);\n  };\n  const reverseTask = index => {\n    let todo = [...fruits];\n    todo.splice(index, 1);\n    setFruits(todo);\n    setTasks([...tasks, ...todo]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          onClick: () => updatedTask(task),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      onClick: () => reverseTask(fruits[fruits.length - 1], fruits.length - 1),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fruit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fruits.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removedFruit(task),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vegetable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: vegetables.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          onClick: () => removedVeg(task),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"as/cwFULixpkXh4egFOTcl7yR/Q=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","type","name","fruits","setFruits","vegetables","setVegetables","updatedTask","item","updatedTasks","filter","task","i","removedFruit","newFruit","updatedFruit","removedVeg","newVegetable","updatedTasksVeg","reverseTask","index","todo","splice","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Work/React test/my-todo-list/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Card.scss';\r\n\r\nconst ToDoList = () => {\r\n  const [tasks, setTasks] = useState(\r\n    [\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Apple',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Broccoli',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Mushroom',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Banana',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Tomato',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Orange',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Mango',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Pineapple',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Cucumber',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Watermelon',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Carrot',\r\n        },\r\n    ]\r\n  );\r\n  const [fruits, setFruits] = useState([]);\r\n  const [vegetables, setVegetables] = useState([]);\r\n\r\n  const updatedTask = (item) => {\r\n    const updatedTasks = tasks.filter((task, i) => task.name !== item.name);\r\n    setTasks(updatedTasks);\r\n\r\n    if (item.type === 'Fruit') {\r\n        setFruits([...fruits, item]);\r\n    }else{\r\n        setVegetables([...vegetables, item]);\r\n    }\r\n  };\r\n\r\n  const removedFruit = (newFruit) => {\r\n    const updatedFruit = fruits.filter((item, i) => item.name !== newFruit.name);\r\n    setFruits(updatedFruit);\r\n    \r\n    setTasks([...tasks, newFruit]);\r\n  }\r\n\r\n  const removedVeg = (newVegetable) => {\r\n    const updatedTasksVeg = vegetables.filter((task, i) => task.name !== newVegetable.name);\r\n    setVegetables(updatedTasksVeg);\r\n\r\n    setTasks([...tasks, newVegetable]);\r\n  }\r\n\r\n  const reverseTask = (index) => {\r\n\r\n    let todo = [...fruits]\r\n    \r\n    todo.splice(index, 1)\r\n    setFruits(todo)\r\n\r\n    setTasks([...tasks, ...todo]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tasks-grid\">\r\n        <div className=\"todo-list\">\r\n            <ul>\r\n                {tasks.map((task, index) => (\r\n                <li key={index} className=\"task-card\" onClick={() => updatedTask(task)}>\r\n                    <span>{task.name}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        <div className=\"todo-list\" onClick={() => reverseTask(fruits[fruits.length-1], fruits.length -1)}>\r\n            <h1>Fruit</h1>\r\n            <ul>\r\n                {fruits.map((task, index) => (\r\n                <li key={index} className=\"task-card\" >\r\n                    <span>{task.name}</span>\r\n                    <button onClick={() => removedFruit(task)}>Delete</button>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        <div className=\"todo-list\">\r\n            <h1>Vegetable</h1>\r\n            <ul>\r\n                {vegetables.map((task, index) => (\r\n                <li key={index} className=\"task-card\" onClick={() => removedVeg(task)}>\r\n                    <span>{task.name}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}