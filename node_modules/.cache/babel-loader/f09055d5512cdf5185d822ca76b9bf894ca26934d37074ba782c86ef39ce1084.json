{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React test\\\\my-todo-list\\\\src\\\\components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    type: 'Fruit',\n    name: 'Apple'\n  }, {\n    type: 'Vegetable',\n    name: 'Broccoli'\n  }, {\n    type: 'Vegetable',\n    name: 'Mushroom'\n  }, {\n    type: 'Fruit',\n    name: 'Banana'\n  }, {\n    type: 'Vegetable',\n    name: 'Tomato'\n  }, {\n    type: 'Fruit',\n    name: 'Orange'\n  }, {\n    type: 'Fruit',\n    name: 'Mango'\n  }, {\n    type: 'Fruit',\n    name: 'Pineapple'\n  }, {\n    type: 'Vegetable',\n    name: 'Cucumber'\n  }, {\n    type: 'Fruit',\n    name: 'Watermelon'\n  }, {\n    type: 'Vegetable',\n    name: 'Carrot'\n  }]);\n  const [fruits, setFruits] = useState([]);\n  const [vegetables, setVegetable] = useState([]);\n  const addTask = item => {\n    setTasks([...tasks, item]);\n  };\n  const addFruit = newFruit => {\n    const updatedTasksFruit = tasks.filter((task, i) => task.name !== newFruit);\n    setFruits([...fruits], newFruit);\n  };\n  const addVegetable = newVegetable => {\n    const updatedTasksVeg = tasks.filter((task, i) => task.name !== newVegetable);\n    setVegetable([...vegetables], newVegetable);\n  };\n  const deleteTask = index => {\n    const updatedTasks = tasks.filter((task, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fruit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vegetable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"JTbPAFOFlxN++RLNta69lCcOHFw=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","type","name","fruits","setFruits","vegetables","setVegetable","addTask","item","addFruit","newFruit","updatedTasksFruit","filter","task","i","addVegetable","newVegetable","updatedTasksVeg","deleteTask","index","updatedTasks","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Work/React test/my-todo-list/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Card.scss';\r\n\r\nconst ToDoList = () => {\r\n  const [tasks, setTasks] = useState(\r\n    [\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Apple',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Broccoli',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Mushroom',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Banana',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Tomato',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Orange',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Mango',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Pineapple',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Cucumber',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Watermelon',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Carrot',\r\n        },\r\n    ]\r\n  );\r\n  const [fruits, setFruits] = useState([]);\r\n  const [vegetables, setVegetable] = useState([]);\r\n\r\n  const addTask = (item) => {\r\n    setTasks([...tasks, item]);\r\n  };\r\n\r\n  const addFruit = (newFruit) => {\r\n    const updatedTasksFruit = tasks.filter((task, i) => task.name !== newFruit);\r\n    setFruits([...fruits], newFruit);\r\n  }\r\n\r\n  const addVegetable = (newVegetable) => {\r\n    const updatedTasksVeg = tasks.filter((task, i) => task.name !== newVegetable);\r\n    setVegetable([...vegetables], newVegetable);\r\n  }\r\n\r\n  const deleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((task, i) => i !== index);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-grid\">\r\n        <div className=\"todo-list\">\r\n            {/* <h1>To-Do List</h1> */}\r\n            {/* <div className=\"input-group\">\r\n                <input\r\n                type=\"text\"\r\n                value={newTask}\r\n                onChange={(e) => setNewTask(e.target.value)}\r\n                placeholder=\"Add a new task\"\r\n                />\r\n                <button onClick={addTask}>Add</button>\r\n            </div> */}\r\n            <ul>\r\n                {tasks.map((task, index) => (\r\n                <li key={index} className=\"task-card\">\r\n                    <span>{task.name}</span>\r\n                    <button onClick={() => deleteTask(index)}>Delete</button>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        <div className=\"todo-list\">\r\n            <h1>Fruit</h1>\r\n            {/* <div className=\"input-group\">\r\n                <input\r\n                type=\"text\"\r\n                value={newTask}\r\n                onChange={(e) => setNewTask(e.target.value)}\r\n                placeholder=\"Add a new task\"\r\n                />\r\n                <button onClick={addTask}>Add</button>\r\n            </div> */}\r\n            <ul>\r\n                {tasks.map((task, index) => (\r\n                <li key={index} className=\"task-card\">\r\n                    <span>{task.name}</span>\r\n                    <button onClick={() => deleteTask(index)}>Delete</button>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        <div className=\"todo-list\">\r\n            <h1>Vegetable</h1>\r\n            {/* <div className=\"input-group\">\r\n                <input\r\n                type=\"text\"\r\n                value={newTask}\r\n                onChange={(e) => setNewTask(e.target.value)}\r\n                placeholder=\"Add a new task\"\r\n                />\r\n                <button onClick={addTask}>Add</button>\r\n            </div> */}\r\n            <ul>\r\n                {tasks.map((task, index) => (\r\n                <li key={index} className=\"task-card\">\r\n                    <span>{task.name}</span>\r\n                    <button onClick={() => deleteTask(index)}>Delete</button>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}