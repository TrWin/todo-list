{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React test\\\\my-todo-list\\\\src\\\\components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    type: 'Fruit',\n    name: 'Apple'\n  }, {\n    type: 'Vegetable',\n    name: 'Broccoli'\n  }, {\n    type: 'Vegetable',\n    name: 'Mushroom'\n  }, {\n    type: 'Fruit',\n    name: 'Banana'\n  }, {\n    type: 'Vegetable',\n    name: 'Tomato'\n  }, {\n    type: 'Fruit',\n    name: 'Orange'\n  }, {\n    type: 'Fruit',\n    name: 'Mango'\n  }, {\n    type: 'Fruit',\n    name: 'Pineapple'\n  }, {\n    type: 'Vegetable',\n    name: 'Cucumber'\n  }, {\n    type: 'Fruit',\n    name: 'Watermelon'\n  }, {\n    type: 'Vegetable',\n    name: 'Carrot'\n  }]);\n  const [fruits, setFruits] = useState([]);\n  const [vegetables, setVegetables] = useState([]);\n  const updatedTask = item => {\n    const updatedTasks = tasks.filter((task, i) => task.name !== item.name);\n    setTasks(updatedTasks);\n    if (item.type === 'Fruit') {\n      setFruits([...fruits, item]);\n      const timeoutId = setTimeout(() => removedFruit(item), 5000);\n    } else {\n      setVegetables([...vegetables, item]);\n      setTimeout(() => removedVeg(item), 5000);\n    }\n  };\n  const removedFruit = newFruit => {\n    const updatedFruit = fruits.filter((item, i) => item.name !== newFruit.name);\n    setFruits(updatedFruit);\n    setTasks([...tasks, newFruit]);\n  };\n  const removedVeg = newVegetable => {\n    const updatedTasksVeg = vegetables.filter((task, i) => task.name !== newVegetable.name);\n    setVegetables(updatedTasksVeg);\n    setTasks([...tasks, newVegetable]);\n  };\n  const reverseTask = (type, item, index) => {\n    console.log(item);\n    if (item !== undefined) {\n      if (type === 'Fruit' && fruits.length !== 0) {\n        let todo = [...fruits];\n        todo.splice(index, 1);\n        setFruits(todo);\n      } else if (type === 'Vegetable' && vegetables.length !== 0) {\n        let todo = [...vegetables];\n        todo.splice(index, 1);\n        setVegetables(todo);\n      }\n      setTasks([...tasks, item]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          onClick: () => updatedTask(task),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fruit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fruits.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          onClick: () => removedFruit(task),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => reverseTask('Fruit', fruits[fruits.length - 1], fruits.length - 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vegetable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: vegetables.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          onClick: () => removedVeg(task),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => reverseTask('Vegetable', vegetables[vegetables.length - 1], vegetables.length - 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"as/cwFULixpkXh4egFOTcl7yR/Q=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","type","name","fruits","setFruits","vegetables","setVegetables","updatedTask","item","updatedTasks","filter","task","i","timeoutId","setTimeout","removedFruit","removedVeg","newFruit","updatedFruit","newVegetable","updatedTasksVeg","reverseTask","index","console","log","undefined","length","todo","splice","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Work/React test/my-todo-list/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Card.scss';\r\n\r\nconst ToDoList = () => {\r\n  const [tasks, setTasks] = useState(\r\n    [\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Apple',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Broccoli',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Mushroom',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Banana',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Tomato',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Orange',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Mango',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Pineapple',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Cucumber',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Watermelon',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Carrot',\r\n        },\r\n    ]\r\n  );\r\n  const [fruits, setFruits] = useState([]);\r\n  const [vegetables, setVegetables] = useState([]);\r\n\r\n  const updatedTask = (item) => {\r\n    const updatedTasks = tasks.filter((task, i) => task.name !== item.name);\r\n    setTasks(updatedTasks);\r\n\r\n    if (item.type === 'Fruit') {\r\n        setFruits([...fruits, item]);\r\n        const timeoutId = setTimeout(() => removedFruit(item), 5000);\r\n    }else{\r\n        setVegetables([...vegetables, item]);\r\n        setTimeout(() => removedVeg(item), 5000);\r\n    }\r\n  };\r\n\r\n  const removedFruit = (newFruit) => {\r\n    const updatedFruit = fruits.filter((item, i) => item.name !== newFruit.name);\r\n    setFruits(updatedFruit);\r\n    \r\n    setTasks([...tasks, newFruit]);\r\n  }\r\n\r\n  const removedVeg = (newVegetable) => {\r\n    const updatedTasksVeg = vegetables.filter((task, i) => task.name !== newVegetable.name);\r\n    setVegetables(updatedTasksVeg);\r\n\r\n    setTasks([...tasks, newVegetable]);\r\n  }\r\n\r\n  const reverseTask = (type, item, index) => {\r\n    console.log(item)\r\n    if (item !== undefined) {\r\n        if (type === 'Fruit' && fruits.length !== 0) {\r\n\r\n            let todo = [...fruits]\r\n            todo.splice(index, 1)\r\n            setFruits(todo)\r\n\r\n        }else if(type === 'Vegetable' && vegetables.length !== 0){\r\n\r\n            let todo = [...vegetables]\r\n            todo.splice(index, 1)\r\n            setVegetables(todo)\r\n\r\n        }\r\n        setTasks([...tasks, item]);\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"tasks-grid\">\r\n        <div className=\"todo-list\">\r\n            <ul>\r\n                {tasks.map((task, index) => (\r\n                <li key={index} className=\"task-card\" onClick={() => updatedTask(task)}>\r\n                    <span>{task.name}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        <div className=\"todo-list\">\r\n            <h1>Fruit</h1>\r\n            <ul>\r\n                {fruits.map((task, index) => (\r\n                <li key={index} className=\"task-card\" onClick={() => removedFruit(task)}>\r\n                    <span>{task.name}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            <div onClick={() => reverseTask('Fruit', fruits[fruits.length-1], fruits.length -1)}></div>\r\n        </div>\r\n        <div className=\"todo-list\">\r\n            <h1>Vegetable</h1>\r\n            <ul>\r\n                {vegetables.map((task, index) => (\r\n                <li key={index} className=\"task-card\" onClick={() => removedVeg(task)}>\r\n                    <span>{task.name}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            <div onClick={() => reverseTask('Vegetable', vegetables[vegetables.length-1], vegetables.length -1)}></div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}