{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React test\\\\my-todo-list\\\\src\\\\components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport '../styles/Card.scss';\nimport useClickOutside from '../components/useClickOutside';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    type: 'Fruit',\n    name: 'Apple'\n  }, {\n    type: 'Vegetable',\n    name: 'Broccoli'\n  }, {\n    type: 'Vegetable',\n    name: 'Mushroom'\n  }, {\n    type: 'Fruit',\n    name: 'Banana'\n  }, {\n    type: 'Vegetable',\n    name: 'Tomato'\n  }, {\n    type: 'Fruit',\n    name: 'Orange'\n  }, {\n    type: 'Fruit',\n    name: 'Mango'\n  }, {\n    type: 'Fruit',\n    name: 'Pineapple'\n  }, {\n    type: 'Vegetable',\n    name: 'Cucumber'\n  }, {\n    type: 'Fruit',\n    name: 'Watermelon'\n  }, {\n    type: 'Vegetable',\n    name: 'Carrot'\n  }]);\n  const [fruits, setFruits] = useState([]);\n  const [vegetables, setVegetables] = useState([]);\n  const inputRef = useRef(handleHeaderClick);\n  const updatedTask = item => {\n    const updatedTasks = tasks.filter((task, i) => task.name !== item.name);\n    setTasks(updatedTasks);\n    if (item.type === 'Fruit') {\n      setFruits([...fruits, item]);\n    } else {\n      setVegetables([...vegetables, item]);\n    }\n  };\n  const addFruit = newFruit => {\n    const updatedFruit = fruits.filter((item, i) => item.name !== newFruit.name);\n    setFruits(updatedFruit);\n    setTasks([...tasks, newFruit]);\n  };\n  const addVegetable = newVegetable => {\n    const updatedTasksVeg = vegetables.filter((task, i) => task.name !== newVegetable);\n    setTasks(updatedTasksVeg);\n  };\n  const reverseTask = () => {\n    console.log('Clicked outside!');\n    // let todo = [...fruits]\n    // setTasks(todo)\n  };\n  const handleOutsideClick = () => {\n    console.log('Clicked outside!');\n    // Add any action you want to perform when clicked outside\n  };\n  useClickOutside(inputRef, handleOutsideClick);\n  const handleHeaderClick = event => {\n    // do something\n\n    event.stopPropagation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          onClick: () => updatedTask(task),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      onClick: handleHeaderClick,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fruit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fruits.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: inputRef,\n          className: \"task-card\",\n          onClick: () => addFruit(task),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vegetable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: vegetables.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-card\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"Uh7tgB2wDS0VVUxH4+yYAuPexyY=\", false, function () {\n  return [useClickOutside];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useRef","useClickOutside","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","type","name","fruits","setFruits","vegetables","setVegetables","inputRef","handleHeaderClick","updatedTask","item","updatedTasks","filter","task","i","addFruit","newFruit","updatedFruit","addVegetable","newVegetable","updatedTasksVeg","reverseTask","console","log","handleOutsideClick","event","stopPropagation","className","children","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Work/React test/my-todo-list/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useRef} from 'react';\r\nimport '../styles/Card.scss';\r\nimport useClickOutside from '../components/useClickOutside';\r\n\r\nconst ToDoList = () => {\r\n  const [tasks, setTasks] = useState(\r\n    [\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Apple',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Broccoli',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Mushroom',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Banana',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Tomato',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Orange',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Mango',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Pineapple',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Cucumber',\r\n        },\r\n        {\r\n            type: 'Fruit',\r\n            name: 'Watermelon',\r\n        },\r\n        {\r\n            type: 'Vegetable',\r\n            name: 'Carrot',\r\n        },\r\n    ]\r\n  );\r\n  const [fruits, setFruits] = useState([]);\r\n  const [vegetables, setVegetables] = useState([]);\r\n  const inputRef = useRef(handleHeaderClick);\r\n\r\n  const updatedTask = (item) => {\r\n    const updatedTasks = tasks.filter((task, i) => task.name !== item.name);\r\n    setTasks(updatedTasks);\r\n\r\n    if (item.type === 'Fruit') {\r\n        setFruits([...fruits, item]);\r\n    }else{\r\n        setVegetables([...vegetables, item]);\r\n    }\r\n  };\r\n\r\n  const addFruit = (newFruit) => {\r\n    const updatedFruit = fruits.filter((item, i) => item.name !== newFruit.name);\r\n    setFruits(updatedFruit);\r\n    \r\n    setTasks([...tasks, newFruit]);\r\n  }\r\n\r\n  const addVegetable = (newVegetable) => {\r\n    const updatedTasksVeg = vegetables.filter((task, i) => task.name !== newVegetable);\r\n    setTasks(updatedTasksVeg);\r\n  }\r\n\r\n  const reverseTask = () => {\r\n    console.log('Clicked outside!');\r\n    // let todo = [...fruits]\r\n    // setTasks(todo)\r\n  }\r\n\r\n  const handleOutsideClick = () => {\r\n    console.log('Clicked outside!');\r\n    // Add any action you want to perform when clicked outside\r\n  };\r\n\r\n  useClickOutside(inputRef, handleOutsideClick);\r\n\r\n  const handleHeaderClick = (event) => {\r\n    // do something\r\n\r\n    event.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-grid\">\r\n        <div className=\"todo-list\">\r\n            <ul>\r\n                {tasks.map((task, index) => (\r\n                <li key={index} className=\"task-card\" onClick={() => updatedTask(task)}>\r\n                    <span>{task.name}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        <div className=\"todo-list\" onClick={handleHeaderClick}>\r\n            <h1>Fruit</h1>\r\n            <ul>\r\n                {fruits.map((task, index) => (\r\n                <li ref={inputRef} key={index} className=\"task-card\" onClick={() => addFruit(task)}>\r\n                    <span>{task.name}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        <div className=\"todo-list\">\r\n            <h1>Vegetable</h1>\r\n            <ul>\r\n                {vegetables.map((task, index) => (\r\n                <li key={index} className=\"task-card\">\r\n                    <span>{task.name}</span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}